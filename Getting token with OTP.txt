C:\Users\carme\OneDrive\Documents\Homey\RecaptchaV3-1>python setup.py build
C:\Users\carme\OneDrive\Documents\Homey\RecaptchaV3-1>python C:\Users\carme\OneDrive\Documents\Homey\RecaptchaV3-1\build\lib\recaptcha3\reCaptchaV3\__init__.py


1. GET
	URL:
	https://www.google.com/recaptcha/enterprise/anchor?ar=1&k=6Lf-jYgUAAAAAEQiRRXezC9dfIQoxofIhqBnGisq&co=aHR0cHM6Ly93d3cudGFtaTQuY28uaWw6NDQz&hl=en&v=gWN_U6xTIPevg0vuq7g1hct0&size=invisible&cb=ji0lh9higcza
	
Now, get the toekn from the response you got (the value of 'recaptcha-token value=')

2. POST
	URL: 
	https://www.google.com/recaptcha/enterprise/reload (notice the end, it's "reload")
	Param:
	k=6Lf-jYgUAAAAAEQiRRXezC9dfIQoxofIhqBnGisq (it's the original 'k' from the original URL we started with)
	Data (DATA MUST BE a long string connected with & between them, not a json):
			v=gWN_U6xTIPevg0vuq7g1hct0 {taken from the original URL}
			reason=q
			c={the actual token got in prev step}
			k=6Lf-jYgUAAAAAEQiRRXezC9dfIQoxofIhqBnGisq (from original URL}
			co=aHR0cHM6Ly93d3cudGFtaTQuY28uaWw6NDQz {from original URL}
			hl=en
			size=invisible
			chr=%5B89%2C64%2C27%5D
			vh=13599012192
			bg=!q62grYxHRvVxjUIjSFNd0mlvrZ-iCgIHAAAB6FcAAAANnAkBySdqTJGFRK7SirleWAwPVhv9-XwP8ugGSTJJgQ46-0IMBKN8HUnfPqm4sCefwxOOEURND35prc9DJYG0pbmg_jD18qC0c-lQzuPsOtUhHTtfv3--SVCcRvJWZ0V3cia65HGfUys0e1K-IZoArlxM9qZfUMXJKAFuWqZiBn-Qi8VnDqI2rRnAQcIB8Wra6xWzmFbRR2NZqF7lDPKZ0_SZBEc99_49j07ISW4X65sMHL139EARIOipdsj5js5JyM19a2TCZJtAu4XL1h0ZLfomM8KDHkcl_b0L-jW9cvAe2K2uQXKRPzruAvtjdhMdODzVWU5VawKhpmi2NCKAiCRUlJW5lToYkR_X-07AqFLY6qi4ZbJ_sSrD7fCNNYFKmLfAaxPwPmp5Dgei7KKvEQmeUEZwTQAS1p2gaBmt6SCOgId3QBfF_robIkJMcXFzj7R0G-s8rwGUSc8EQzT_DCe9SZsJyobu3Ps0-YK-W3MPWk6a69o618zPSIIQtSCor9w_oUYTLiptaBAEY03NWINhc1mmiYu2Yz5apkW_KbAp3HD3G0bhzcCIYZOGZxyJ44HdGsCJ-7ZFTcEAUST-aLbS-YN1AyuC7ClFO86CMICVDg6aIDyCJyIcaJXiN-bN5xQD_NixaXatJy9Mx1XEnU4Q7E_KISDJfKUhDktK5LMqBJa-x1EIOcY99E-eyry7crf3-Hax3Uj-e-euzRwLxn2VB1Uki8nqJQVYUgcjlVXQhj1X7tx4jzUb0yB1TPU9uMBtZLRvMCRKvFdnn77HgYs5bwOo2mRECiFButgigKXaaJup6NM4KRUevhaDtnD6aJ8ZWQZTXz_OJ74a_OvPK9eD1_5pTG2tUyYNSyz-alhvHdMt5_MAdI3op4ZmcvBQBV9VC2JLjphDuTW8eW_nuK9hN17zin6vjEL8YIm_MekB_dIUK3T1Nbyqmyzigy-Lg8tRL6jSinzdwOTc9hS5SCsPjMeiblc65aJC8AKmA5i80f-6Eg4BT305UeXKI3QwhI3ZJyyQAJTata41FoOXl3EF9Pyy8diYFK2G-CS8lxEpV7jcRYduz4tEPeCpBxU4O_KtM2iv4STkwO4Z_-c-fMLlYu9H7jiFnk6Yh8XlPE__3q0FHIBFf15zVSZ3qroshYiHBMxM5BVQBOExbjoEdYKx4-m9c23K3suA2sCkxHytptG-6yhHJR3EyWwSRTY7OpX_yvhbFri0vgchw7U6ujyoXeCXS9N4oOoGYpS5OyFyRPLxJH7yjXOG2Play5HJ91LL6J6qg1iY8MIq9XQtiVZHadVpZVlz3iKcX4vXcQ3rv_qQwhntObGXPAGJWEel5OiJ1App7mWy961q3mPg9aDEp9VLKU5yDDw1xf6tOFMwg2Q-PNDaKXAyP_FOkxOjnu8dPhuKGut6cJr449BKDwbnA9BOomcVSztEzHGU6HPXXyNdZbfA6D12f5lWxX2B_pobw3a1gFLnO6mWaNRuK1zfzZcfGTYMATf6d7sj9RcKNS230XPHWGaMlLmNxsgXkEN7a9PwsSVwcKdHg_HU4vYdRX6vkEauOIwVPs4dS7yZXmtvbDaX1zOU4ZYWg0T42sT3nIIl9M2EeFS5Rqms_YzNp8J-YtRz1h5RhtTTNcA5jX4N-xDEVx-vD36bZVzfoMSL2k85PKv7pQGLH-0a3DsR0pePCTBWNORK0g_RZCU_H898-nT1syGzNKWGoPCstWPRvpL9cnHRPM1ZKemRn0nPVm9Bgo0ksuUijgXc5yyrf5K49UU2J5JgFYpSp7aMGOUb1ibrj2sr-D63d61DtzFJ2mwrLm_KHBiN_ECpVhDsRvHe5iOx_APHtImevOUxghtkj-8RJruPgkTVaML2MEDOdL_UYaldeo-5ckZo3VHss7IpLArGOMTEd0bSH8tA8CL8RLQQeSokOMZ79Haxj8yE0EAVZ-k9-O72mmu5I0wH5IPgapNvExeX6O1l3mC4MqLhKPdOZOnTiEBlSrV4ZDH_9fhLUahe5ocZXvXqrud9QGNeTpZsSPeIYubeOC0sOsuqk10sWB7NP-lhifWeDob-IK1JWcgFTytVc99RkZTjUcdG9t8prPlKAagZIsDr1TiX3dy8sXKZ7d9EXQF5P_rHJ8xvmUtCWqbc3V5jL-qe8ANypwHsuva75Q6dtqoBR8vCE5xWgfwB0GzR3Xi_l7KDTsYAQIrDZVyY1UxdzWBwJCrvDrtrNsnt0S7BhBJ4ATCrW5VFPqXyXRiLxHCIv9zgo-NdBZQ4hEXXxMtbem3KgYUB1Rals1bbi8X8MsmselnHfY5LdOseyXWIR2QcrANSAypQUAhwVpsModw7HMdXgV9Uc-HwCMWafOChhBr88tOowqVHttPtwYorYrzriXNRt9LkigESMy1bEDx79CJguitwjQ9IyIEu8quEQb_-7AEXrfDzl_FKgASnnZLrAfZMtgyyddIhBpgAvgR_c8a8Nuro-RGV0aNuunVg8NjL8binz9kgmZvOS38QaP5anf2vgzJ9wC0ZKDg2Ad77dPjBCiCRtVe_dqm7FDA_cS97DkAwVfFawgce1wfWqsrjZvu4k6x3PAUH1UNzQUxVgOGUbqJsaFs3GZIMiI8O6-tZktz8i8oqpr0RjkfUhw_I2szHF3LM20_bFwhtINwg0rZxRTrg4il-_q7jDnVOTqQ7fdgHgiJHZw_OOB7JWoRW6ZlJmx3La8oV93fl1wMGNrpojSR0b6pc8SThsKCUgoY6zajWWa3CesX1ZLUtE7Pfk9eDey3stIWf2acKolZ9fU-gspeACUCN20EhGT-HvBtNBGr_xWk1zVJBgNG29olXCpF26eXNKNCCovsILNDgH06vulDUG_vR5RrGe5LsXksIoTMYsCUitLz4HEehUOd9mWCmLCl00eGRCkwr9EB557lyr7mBK2KPgJkXhNmmPSbDy6hPaQ057zfAd5s_43UBCMtI-aAs5NN4TXHd6IlLwynwc1zsYOQ6z_HARlcMpCV9ac-8eOKsaepgjOAX4YHfg3NekrxA2ynrvwk9U-gCtpxMJ4f1cVx3jExNlIX5LxE46FYIhQ
			
	
	In the response, you will get:
		value=")]}'\n[\"rresp\",\"03AFcWeA7OI....".....
		Need to parse and get what you have after the first "rresp","<here>"

3. POST
	URL: https://swelcustomers.strauss-water.com/public/phone/generateOTP
	Body:
		{
		"phoneNumber":"+972525553476",
		"reCaptchaToken": {the token from step 2}
		}
	This will initiate a text message to the user, with the OTP

4. Do Step 1 and 2 again
5. POST
	URL: https://swelcustomers.strauss-water.com/public/phone/submitOTP
	Body:
	{
    "phoneNumber": "+972525553476",
    "code": {the OTP the user got to his phone},
    "reCaptchaToken": {the token from step 4}
}

You will get:
{
"access_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZHAiOiJwaG9uZSIsInVzZXJfbmFtZSI6Im1ieURwQjdiS2lHRVpBQWZWZEhIYmZnZi9OQ012cnQwIiwic2NvcGUiOltdLCJpZCI6IjRiZDEwZGNiLWRhZDEtNDJiMC1hNTU1LWZmM2ZhZWZjNmQzOEB0YW1pZWRnZS5vbm1pY3Jvc29mdC5jb20iLCJleHAiOjE2OTk5OTU3MDIsImF1dGhvcml0aWVzIjpbIkNVU1RPTUVSIl0sImp0aSI6Inlsb3lTdGdsNElJY2xCejdfQm1GNS1RZlVhUSIsImNsaWVudF9pZCI6ImNsaWVudCJ9.pxIoqPzoUvz9jZkVNyu5DBJjsELwm5eEJZ0AxaJeEbZHT_yREmX2RXP_jL2aJvLLj6ItVqieTsNTy4YoOiVhf1SzZnhhcYEhOgK-17nnTEJ86YgGQSRWe0rTmQ0ZB8LYr_AFriuvHYjJWhM2HH9hNrjeGCfBMp6vW7A7oYIfaBPpcfoWsgnyOYheSIeo-h7_2F4joAf1kSlXvUBfecFojjY4-8xyOkNsSG58kqHGP4xQA5DfRliAjjHSgE3UweYVq1mT3pVMNkQXOK0uA6ZnizIMdWcDHv2gPp3mIDoLlX3WbLKrMRDwZCU6mDryYDgPUW1Enki-RG3tFM3Pc6kt0WLAjutOfH7VkQsEJzTzAL4fUrwNOyBfqoSVZVBY0jNpi6MDwursAQluqrK7OzeVsg1s5wcsEwBKaYExDDQpfcyolw_4nsE0NnzxG-Hruy00-FcabkS87NieymzYNFBmzDfHWc66AHCat1NX1D9SvHXJIMbAq16euMiUeB1TEj2Yc1o3ymE8GbuH8xU9a3rl0eU2nN38Cdc80Fe-_gz7uBRgyaxlR_vyySAYKfjWle8Zk46FLN1ou8K1D8Vcfcw168Hti_GoU1npjgOdgo2V12QV7dQAoVPaMA26uDa2ByXfiJVS7qTdrPMCdB2cOxb9l4NuIB_EIlEE_MovqQ7DNJ0",
"token_type": "bearer",
"refresh_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZHAiOiJwaG9uZSIsInVzZXJfbmFtZSI6Im1ieURwQjdiS2lHRVpBQWZWZEhIYmZnZi9OQ012cnQwIiwic2NvcGUiOltdLCJhdGkiOiJ5bG95U3RnbDRJSWNsQno3X0JtRjUtUWZVYVEiLCJpZCI6IjRiZDEwZGNiLWRhZDEtNDJiMC1hNTU1LWZmM2ZhZWZjNmQzOEB0YW1pZWRnZS5vbm1pY3Jvc29mdC5jb20iLCJleHAiOjE3MzE1MTczMDIsImF1dGhvcml0aWVzIjpbIkNVU1RPTUVSIl0sImp0aSI6Ik8wbnB6OUJUcXFyZjEzYk5KQ1piZDlxSW0zTSIsImNsaWVudF9pZCI6ImNsaWVudCJ9.b_MRLpqzTwZ03_rCYvXgQRVBYFDuSQlNkE5fjhvkrv59cu-JZsSRcvnI_QZI9SehiWgtOkmvdS8XHw0E1u6UsXgzPPCI3n9sAPkXMiPwrJtMcNlcWC2BdMdlKO1gqtF8hX0ycuPMvDwDUf7bZJGl-QmWN6OlJcsOB1n1z5v5AtXyvgpeGyCncBPtD8ME-n-oi6z4LF9xj2q73rTuZycNr8Jogw3VW1J3IGqcksOSCqiWN_wMtUJqFm01J_yoiM9lDdICTWKtuLWecO_8-DXGhZ578kZ-XUrfJsoS9afwE4Tk-zTnJT3-A-1EdCWmD2xcw6FQaBdBwVSIinwqDds7cNK1L2clO7O0hxJ8mof0Q0nMwsyDKbxZwiYlqrTvpU2NLziyBWHVXlSnDo973PrDpW08xW6Fl4V1JCsvQuW9P44EI_cK5GtQllVl4pWkBXhO29ADbxSpmCfvc8dLYh_9vfG6I940dUoiuT-DN7d5SoHH1p_mSSqvQxjV8wCZ_fLm914H7kQS7_T4kiB6Pi1vWP0bWahk_8yNE-0AS_2zp9t-wzAAAXmP-L6ciupxd9YlBlXQrBn1tcA89sreXRFxz5es4Y_DspIl9kcqQSghftZV9KaogITwLHt3oRyl16lnY0Av8YzKSd5xojSSsGEsoQ__RkcQvF7FWiyawfftEUk",
"expires_in":14399,
"idp":"phone",
"id":"4bd10dcb-dad1-42b0-a555-ff3faefc6d38@tamiedge.onmicrosoft.com",
"jti":"yloyStgl4IIclBz7_BmF5-QfUaQ"
}

You need the "token_type"+"access_token"  in the header "Authorization" field of the header of each request to Tami4 API...